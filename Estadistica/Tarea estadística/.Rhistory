"Alumno 14", 1.21,
"Alumno 15", 1.28,
"Alumno 16", 1.30,
"Alumno 17", 1.22,
"Alumno 18", 1.25,
"Alumno 19", 1.20,
"Alumno 20", 1.28,
"Alumno 21", 1.21,
"Alumno 22", 1.29,
"Alumno 23", 1.26,
"Alumno 24", 1.22,
"Alumno 25", 1.28,
"Alumno 26", 1.27,
"Alumno 27", 1.26,
"Alumno 28", 1.23,
"Alumno 29", 1.22,
"Alumno 30", 1.21), .Dim = c(30L, 2L))
table1 <- structure(c("Alumno 1", 1.25,
"Alumno 2", 1.28,
"Alumno 3", 1.27,
"Alumno 4", 1.21,
"Alumno 5", 1.22,
"Alumno 6", 1.29,
"Alumno 7", 1.30,
"Alumno 8", 1.24,
"Alumno 9", 1.27,
"Alumno 10", 1.29,
"Alumno 11", 1.23,
"Alumno 12", 1.26,
"Alumno 13", 1.30,
"Alumno 14", 1.21,
"Alumno 15", 1.28,
"Alumno 16", 1.30,
"Alumno 17", 1.22,
"Alumno 18", 1.25,
"Alumno 19", 1.20,
"Alumno 20", 1.28,
"Alumno 21", 1.21,
"Alumno 22", 1.29,
"Alumno 23", 1.26,
"Alumno 24", 1.22,
"Alumno 25", 1.28,
"Alumno 26", 1.27,
"Alumno 27", 1.26,
"Alumno 28", 1.23,
"Alumno 29", 1.22,
"Alumno 30", 1.21), .Dim = c(30L, 2L))
View(table1)
table1 <- structure(c("Alumno 1",
"Alumno 2",
"Alumno 3",
"Alumno 4",
"Alumno 5",
"Alumno 6",
"Alumno 7",
"Alumno 8",
"Alumno 9",
"Alumno 10",
"Alumno 11",
"Alumno 12",
"Alumno 13",
"Alumno 14",
"Alumno 15",
"Alumno 16",
"Alumno 17",
"Alumno 18",
"Alumno 19",
"Alumno 20",
"Alumno 21",
"Alumno 22",
"Alumno 23",
"Alumno 24",
"Alumno 25",
"Alumno 26",
"Alumno 27",
"Alumno 28",
"Alumno 29",
"Alumno 30",
1.25,
1.28,
1.27,
1.21,
1.22,
1.29,
1.30,
1.24,
1.27,
1.29,
1.23,
1.26,
1.30,
1.21,
1.28,
1.30,
1.22,
1.25,
1.20,
1.28,
1.21,
1.29,
1.26,
1.22,
1.28,
1.27,
1.26,
1.23,
1.22,
1.21), .Dim = c(30L, 2L))
View(table1)
table1 <- structure(c("Alumno 1", "Alumno 2", "Alumno 3", "Alumno 4", "Alumno 5", "Alumno 6", "Alumno 7", "Alumno 8", "Alumno 9", "Alumno 10",
"Alumno 11", "Alumno 12", "Alumno 13", "Alumno 14", "Alumno 15", "Alumno 16", "Alumno 17", "Alumno 18", "Alumno 19", "Alumno 20",
"Alumno 22", "Alumno 23", "Alumno 24", "Alumno 21", "Alumno 25", "Alumno 26", "Alumno 27", "Alumno 28", "Alumno 29", "Alumno 30",
1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29,
1.23, 1.26, 1.30, 1.21, 1.28, 1.30, 1.22, 1.25, 1.20, 1.28,
1.21, 1.29, 1.26, 1.22, 1.28, 1.27, 1.26, 1.23, 1.22, 1.21), .Dim = c(30L, 2L))
View(table1)
estaturaMatrix <- structure(c("Alumno 1", "Alumno 2", "Alumno 3", "Alumno 4", "Alumno 5", "Alumno 6", "Alumno 7", "Alumno 8", "Alumno 9", "Alumno 10",
"Alumno 11", "Alumno 12", "Alumno 13", "Alumno 14", "Alumno 15", "Alumno 16", "Alumno 17", "Alumno 18", "Alumno 19", "Alumno 20",
"Alumno 22", "Alumno 23", "Alumno 24", "Alumno 21", "Alumno 25", "Alumno 26", "Alumno 27", "Alumno 28", "Alumno 29", "Alumno 30",
1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29,
1.23, 1.26, 1.30, 1.21, 1.28, 1.30, 1.22, 1.25, 1.20, 1.28,
1.21, 1.29, 1.26, 1.22, 1.28, 1.27, 1.26, 1.23, 1.22, 1.21), .Dim = c(30L, 2L))
matrixHeight <- structure(c("Alumno 1", "Alumno 2", "Alumno 3", "Alumno 4", "Alumno 5", "Alumno 6", "Alumno 7", "Alumno 8", "Alumno 9", "Alumno 10",
"Alumno 11", "Alumno 12", "Alumno 13", "Alumno 14", "Alumno 15", "Alumno 16", "Alumno 17", "Alumno 18", "Alumno 19", "Alumno 20",
"Alumno 22", "Alumno 23", "Alumno 24", "Alumno 21", "Alumno 25", "Alumno 26", "Alumno 27", "Alumno 28", "Alumno 29", "Alumno 30",
1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29,
1.23, 1.26, 1.30, 1.21, 1.28, 1.30, 1.22, 1.25, 1.20, 1.28,
1.21, 1.29, 1.26, 1.22, 1.28, 1.27, 1.26, 1.23, 1.22, 1.21), .Dim = c(30L, 2L))
matrixHeight
names(matrixHeight) <- c('Alumno', 'Estatura')
View(matrixHeight)
dataHeight <- as.data.frame(matrixHeight)
View(dataHeight)
names(dataHeight) <- c('Alumno', 'Estatura')
# Intervalo confianza del 95%
# para el estatura de los 15 primeros
err <- zsum.test(mean.x=mean(dfWeightHeightFrist$Estatura),
sigma.x=sd(dfWeightHeightFrist$Estatura),
n.x=15,conf.level=0.95)
## 1B
library(dplyr)
library(PerformanceAnalytics)
library(BSDA)
dfWeightHeight <- data.frame(c("Alumno 1", "Alumno 2", "Alumno 3", "Alumno 4", "Alumno 5", "Alumno 6", "Alumno 7", "Alumno 8", "Alumno 9", "Alumno 10",
"Alumno 11" , "Alumno 12" , "Alumno 13" , "Alumno 14" , "Alumno 15" , "Alumno 16" , "Alumno 17", "Alumno 18" , "Alumno 19" , "Alumno 20",
"Alumno 21" , "Alumno 22" , "Alumno 23" , "Alumno 24" , "Alumno 25" , "Alumno 26" , "Alumno 27", "Alumno 28" , "Alumno 29" , "Alumno 30"),
c(1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29,
1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29,
1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29),
c(32, 33, 31, 34, 32, 31, 34, 32, 32, 35,
31, 35, 34, 33, 33, 31, 35, 32, 31, 33,
33 ,32 ,34 ,34 ,35 ,31 ,34, 33, 35, 34))
names(dfWeightHeight) <- c("Alumno", "Estatura", "Peso")
# height
height <- dfWeightHeight[!duplicated(dfWeightHeight$Estatura),]
height <- sort(height$Estatura)
# weight
weight <- dfWeightHeight[!duplicated(dfWeightHeight$Peso),]
weight <- sort(weight$Peso)
# tabla de correspondencias o contingencia
correspondenceTable <- table(dfWeightHeight$Peso, dfWeightHeight$Estatura)
dfCorrespondenceTable <- as.data.frame.matrix(correspondenceTable)
print(dfCorrespondenceTable)
# intervalos de altura
dfItervalos <- dfCorrespondenceTable
dfItervalos[,1] <- dfItervalos$'1.21' + dfItervalos$'1.22'
dfItervalos[,2] <- dfItervalos$'1.24' + dfItervalos$'1.25'
dfItervalos[,3] <- dfItervalos$'1.27'
dfItervalos[,4] <- dfItervalos$'1.28' + dfItervalos$'1.29' + dfItervalos$'1.3'
dfItervalos <- dfItervalos[,1:4]
names(dfItervalos) <- c("1.21-1.225", "1.226-1.25", "1.251-1.275", "1.276-1.3")
pairs(dfWeightHeight$Estatura ~ dfWeightHeight$Peso)
chart.Correlation(dfWeightHeight[,2:3]) # 0.0099 intervalo de correlacion irregular
# cargar dfWeightHeight del 1B de los 15 primeros
dfWeightHeightFrist <- dfWeightHeight[1:15,]
# Intervalo confianza del 95%
# para el estatura de los 15 primeros
err <- zsum.test(mean.x=mean(dfWeightHeightFrist$Estatura),
sigma.x=sd(dfWeightHeightFrist$Estatura),
n.x=15,conf.level=0.95)
View(err)
zsum.test(mean.x=mean(dfWeightHeightFrist$Estatura),
sigma.x=sd(dfWeightHeightFrist$Estatura),
n.x=15,conf.level=0.95)
# Intervalo confianza del 95%
# para el estatura de los 15 primeros
err <- zsum.test(mean.x=mean(dfWeightHeightFrist$Estatura),
sigma.x=sd(dfWeightHeightFrist$Estatura),
n.x=15,conf.level=0.95)
View(err)
err
err$p.value
err$z
err$statistic
# Intervalo confianza del 95%
# para el estatura de los 15 primeros
t.test(mean.x=mean(dfWeightHeightFrist$Estatura),
sigma.x=sd(dfWeightHeightFrist$Estatura),
n.x=15,conf.level=0.95)
t.test(x=dfWeightHeightFrist$Estatura, conf.level=0.95)$conf.int
t.test(x=dfWeightHeightFrist$Estatura, conf.level=0.95)
# Intervalo confianza del 95%
# para el peso de los 15 primeros
t.test(x=dfWeightHeightFrist$Peso, conf.level=0.95)
t.test(x=dfWeightHeightFrist$Peso, conf.level=0.95)$conf.int
t.test(x=dfWeightHeightSecond$Estatura, conf.level=0.95)
# cargar dfWeightHeight del 1B de los 15 ultimos
dfWeightHeightSecond <- dfWeightHeight[16:30,]
t.test(x=dfWeightHeightSecond$Estatura, conf.level=0.95)
t.test(x=dfWeightHeightSecond$Estatura, conf.level=0.95)$conf.int
# Intervalo confianza del 95%
# para el estatura de los 15 primeros
t.test(x=dfWeightHeightFrist$Estatura, conf.level=0.95)
# Intervalo confianza del 95%
# para el estatura de los 15 primeros
estaturaFrist <-  t.test(x=dfWeightHeightFrist$Estatura, conf.level=0.95)
estaturaFrist$conf.int
View(estaturaFrist)
estaturaFrist
# Intervalo confianza del 95%
# para el peso de los 15 primeros
weightFirst <- t.test(x=dfWeightHeightFrist$Peso, conf.level=0.95)
weightFirst$conf.int
# Intervalo confianza del 95%
# para el peso de los 15 ultimos
weightSecond <- t.test(x=dfWeightHeightSecond$Peso, conf.level=0.95)
weightSecond$conf.int
estaturaSecond <- t.test(x=dfWeightHeightSecond$Estatura, conf.level=0.95)
estaturaSecond$conf.int
estaturaSecond
estaturaFrist
# Intervalo confianza del 95%
# para el estatura de los 15 primeros
estaturaFrist <-  t.test(x=dfWeightHeightFrist$Estatura, conf.level=0.95)
estaturaFrist
dfHeight <- data.frame(c("Alumno 1", "Alumno 2", "Alumno 3", "Alumno 4", "Alumno 5", "Alumno 6", "Alumno 7", "Alumno 8", "Alumno 9", "Alumno 10",
"Alumno 11", "Alumno 12", "Alumno 13", "Alumno 14", "Alumno 15", "Alumno 16", "Alumno 17", "Alumno 18", "Alumno 19", "Alumno 20",
"Alumno 22", "Alumno 23", "Alumno 24", "Alumno 21", "Alumno 25", "Alumno 26", "Alumno 27", "Alumno 28", "Alumno 29", "Alumno 30"),
c(1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29,
1.23, 1.26, 1.30, 1.21, 1.28, 1.30, 1.22, 1.25, 1.20, 1.28,
1.21, 1.29, 1.26, 1.22, 1.28, 1.27, 1.26, 1.23, 1.22, 1.21))
names(dfHeight) <- c("Alumno", "Estatura")
# cargar dfWeightHeight del 1B de los 15 primeros
dfHeightFirst <- dfHeight[1:15,]
# cargar dfWeightHeight del 1B de los 15 ultimos
dfHeightSecond <- dfHeight[16:30,]
# Intervalo confianza del 95%
# para el estatura de los 15 primeros
heightFirst <-  t.test(x=dfHeightFirst$Estatura, conf.level=0.95)
heightFirst$conf.int
# Intervalo confianza del 95%
# para el estatura de los 15 ultimos
heightSecond <- t.test(x=dfWeightHeightSecond$Estatura, conf.level=0.95)
# Intervalo confianza del 95%
# para el estatura de los 15 ultimos
heightSecond <- t.test(x=dfHeightSecond$Estatura, conf.level=0.95)
heightSecond$conf.int
t.test(
x           = dfHeightFirst$Estatura,
y           = dfHeightSecond$Estatura,
alternative = "two.sided",
mu          = 0,
var.equal   = FALSE,
conf.level  = 0.95
)
t.test(
x           = dfHeightFirst$Estatura,
y           = dfHeightSecond$Estatura,
alternative = "two.sided",
mu          = 0,
var.equal   = TRUE,
conf.level  = 0.95
)
t.test(
x           = dfHeightFirst$Estatura,
y           = dfHeightSecond$Estatura,
alternative = "two.sided",
mu          = 0,
var.equal   = FALSE,
conf.level  = 0.95
)
t.test(
x           = dfHeightFirst$Estatura,
y           = dfHeightSecond$Estatura,
alternative = "two.sided",
mu          = 0,
var.equal   = FALSE,
paired=FALSE,
conf.level  = 0.95
)
t.test(
x           = dfHeightFirst$Estatura,
y           = dfHeightSecond$Estatura,
alternative = "two.sided",
mu          = 0,
var.equal   = FALSE,
paired=FALSE,
conf.level  = 0.95
)
url <- 'https://raw.githubusercontent.com/fhernanb/datos/master/medidas_cuerpo'
datos <- read.table(file=url, header=T)
hombres <- datos[datos$sexo=="Hombre", ]
mujeres <- datos[datos$sexo=="Mujer", ]
t.test(x=hombres$altura, y=mujeres$altura,
paired=FALSE, var.equal=FALSE,
conf.level = 0.95)
t.test(
x           = dfHeightFirst$Estatura,
y           = dfHeightSecond$Estatura,
alternative = "two.sided",
mu          = 0,
var.equal   = FALSE,
paired=FALSE,
conf.level  = 0.95
)
t.test(
x           = dfHeightFirst$Estatura,
y           = dfHeightSecond$Estatura,
alternative = "two.sided",
mu          = 0,
var.equal   = FALSE,
paired=FALSE,
conf.level  = 0.95
)$conf.int
t.test(
x           = dfHeightFirst$Estatura,
y           = dfHeightSecond$Estatura,
alternative = "two.sided",
mu          = 0,
var.equal   = FALSE,
paired=FALSE,
conf.level  = 0.95
)
t.test(x=hombres$altura, y=mujeres$altura,
paired=FALSE, var.equal=FALSE,
conf.level = 0.95)$conf.int
t.test(x=hombres$altura, y=mujeres$altura,
paired=FALSE, var.equal=FALSE,
conf.level = 0.95)
t.test(
x           = dfHeightFirst$Estatura,
y           = dfHeightSecond$Estatura,
alternative = "two.sided",
mu          = 0,
var.equal   = FALSE,
paired      = FALSE,
conf.level  = 0.95
)
# directory
getwd()
setwd("/Users/macasib/Desktop/UCM/Estadistica/Tarea\ estadística")
## 1
## 1A
library(modeest)
dfHeight <- data.frame(c("Alumno 1", "Alumno 2", "Alumno 3", "Alumno 4", "Alumno 5", "Alumno 6", "Alumno 7", "Alumno 8", "Alumno 9", "Alumno 10",
"Alumno 11", "Alumno 12", "Alumno 13", "Alumno 14", "Alumno 15", "Alumno 16", "Alumno 17", "Alumno 18", "Alumno 19", "Alumno 20",
"Alumno 22", "Alumno 23", "Alumno 24", "Alumno 21", "Alumno 25", "Alumno 26", "Alumno 27", "Alumno 28", "Alumno 29", "Alumno 30"),
c(1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29,
1.23, 1.26, 1.30, 1.21, 1.28, 1.30, 1.22, 1.25, 1.20, 1.28,
1.21, 1.29, 1.26, 1.22, 1.28, 1.27, 1.26, 1.23, 1.22, 1.21))
names(dfHeight) <- c("Alumno", "Estatura")
#############################
## medidas de centralizacion
media <- mean(dfHeight$Estatura)
mediana <- median(dfHeight$Estatura)
moda <- mfv(dfHeight$Estatura)
## medidas de dispersion
# Rango
rangoAux <- range(dfHeight$Estatura)
rango <- max(rangoAux) - min(rangoAux)
# Varianza
varianza <- var(dfHeight$Estatura)
# Desviación típica
desviacionTipica <- sd(dfHeight$Estatura)
# Coeficiente de variación de Pearson
coeficienteVariacion <- sd(dfHeight$Estatura)/mean(dfHeight$Estatura) #desviacionTipica/media
## medidas de posicion
# Cuartiles
sum <- summary(dfHeight$Estatura) # 2nd Qu. = mediana
min <- sum[1]
firstQu <- sum[2]
secondQu <- sum[4] # mediana
thirdQu <- sum[5]
max <- sum[6]
print(sum)
#############################
# diagrama de caja y bigotes
boxplot(dfHeight$Estatura)
#############################
# diagrama de caja y bigotes
boxplot(dfHeight$Estatura, main="Car Milage Data")
#############################
# diagrama de caja y bigotes
boxplot(dfHeight$Estatura, main="Altura en una muestra de 30 niños")
## 1
## 1A
library(modeest)
dfHeight <- data.frame(c("Alumno 1", "Alumno 2", "Alumno 3", "Alumno 4", "Alumno 5", "Alumno 6", "Alumno 7", "Alumno 8", "Alumno 9", "Alumno 10",
"Alumno 11", "Alumno 12", "Alumno 13", "Alumno 14", "Alumno 15", "Alumno 16", "Alumno 17", "Alumno 18", "Alumno 19", "Alumno 20",
"Alumno 22", "Alumno 23", "Alumno 24", "Alumno 21", "Alumno 25", "Alumno 26", "Alumno 27", "Alumno 28", "Alumno 29", "Alumno 30"),
c(1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29,
1.23, 1.26, 1.30, 1.21, 1.28, 1.30, 1.22, 1.25, 1.20, 1.28,
1.21, 1.29, 1.26, 1.22, 1.28, 1.27, 1.26, 1.23, 1.22, 1.21))
names(dfHeight) <- c("Alumno", "Estatura")
#############################
## medidas de centralizacion
media <- mean(dfHeight$Estatura)
mediana <- median(dfHeight$Estatura)
moda <- mfv(dfHeight$Estatura)
## medidas de dispersion
# Rango
rangoAux <- range(dfHeight$Estatura)
rango <- max(rangoAux) - min(rangoAux)
# Varianza
varianza <- var(dfHeight$Estatura)
# Varianza
varianza <- var(dfHeight$Estatura)
varianza
# Desviación típica
desviacionTipica <- sd(dfHeight$Estatura)
# Coeficiente de variación de Pearson
coeficienteVariacion <- sd(dfHeight$Estatura)/mean(dfHeight$Estatura) #desviacionTipica/media
desviacionTipica
coeficienteVariacion
## medidas de posicion
# Cuartiles
sum <- summary(dfHeight$Estatura) # 2nd Qu. = mediana
print(sum)
## 1B
library(dplyr)
library(PerformanceAnalytics)
library(BSDA)
dfWeightHeight <- data.frame(c("Alumno 1", "Alumno 2", "Alumno 3", "Alumno 4", "Alumno 5", "Alumno 6", "Alumno 7", "Alumno 8", "Alumno 9", "Alumno 10",
"Alumno 11" , "Alumno 12" , "Alumno 13" , "Alumno 14" , "Alumno 15" , "Alumno 16" , "Alumno 17", "Alumno 18" , "Alumno 19" , "Alumno 20",
"Alumno 21" , "Alumno 22" , "Alumno 23" , "Alumno 24" , "Alumno 25" , "Alumno 26" , "Alumno 27", "Alumno 28" , "Alumno 29" , "Alumno 30"),
c(1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29,
1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29,
1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29),
c(32, 33, 31, 34, 32, 31, 34, 32, 32, 35,
31, 35, 34, 33, 33, 31, 35, 32, 31, 33,
33 ,32 ,34 ,34 ,35 ,31 ,34, 33, 35, 34))
## 1B
library(dplyr)
library(PerformanceAnalytics)
library(BSDA)
dfWeightHeight <- data.frame(c("Alumno 1", "Alumno 2", "Alumno 3", "Alumno 4", "Alumno 5", "Alumno 6", "Alumno 7", "Alumno 8", "Alumno 9", "Alumno 10",
"Alumno 11" , "Alumno 12" , "Alumno 13" , "Alumno 14" , "Alumno 15" , "Alumno 16" , "Alumno 17", "Alumno 18" , "Alumno 19" , "Alumno 20",
"Alumno 21" , "Alumno 22" , "Alumno 23" , "Alumno 24" , "Alumno 25" , "Alumno 26" , "Alumno 27", "Alumno 28" , "Alumno 29" , "Alumno 30"),
c(1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29,
1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29,
1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29),
c(32, 33, 31, 34, 32, 31, 34, 32, 32, 35,
31, 35, 34, 33, 33, 31, 35, 32, 31, 33,
33 ,32 ,34 ,34 ,35 ,31 ,34, 33, 35, 34))
names(dfWeightHeight) <- c("Alumno", "Estatura", "Peso")
# height
height <- dfWeightHeight[!duplicated(dfWeightHeight$Estatura),]
height <- sort(height$Estatura)
# weight
weight <- dfWeightHeight[!duplicated(dfWeightHeight$Peso),]
weight <- sort(weight$Peso)
# tabla de correspondencias o contingencia
correspondenceTable <- table(dfWeightHeight$Peso, dfWeightHeight$Estatura)
dfCorrespondenceTable <- as.data.frame.matrix(correspondenceTable)
print(dfCorrespondenceTable)
View(dfCorrespondenceTable)
# intervalos de altura
dfItervalos <- dfCorrespondenceTable
dfItervalos[,1] <- dfItervalos$'1.21' + dfItervalos$'1.22'
dfItervalos[,2] <- dfItervalos$'1.24' + dfItervalos$'1.25'
dfItervalos[,3] <- dfItervalos$'1.27'
dfItervalos[,4] <- dfItervalos$'1.28' + dfItervalos$'1.29' + dfItervalos$'1.3'
dfItervalos <- dfItervalos[,1:4]
names(dfItervalos) <- c("1.21-1.225", "1.226-1.25", "1.251-1.275", "1.276-1.3")
pairs(dfWeightHeight$Estatura ~ dfWeightHeight$Peso)
View(dfItervalos)
chart.Correlation(dfWeightHeight[,2:3]) # 0.0099 intervalo de correlacion irregular
dfHeight <- data.frame(c("Alumno 1", "Alumno 2", "Alumno 3", "Alumno 4", "Alumno 5", "Alumno 6", "Alumno 7", "Alumno 8", "Alumno 9", "Alumno 10",
"Alumno 11", "Alumno 12", "Alumno 13", "Alumno 14", "Alumno 15", "Alumno 16", "Alumno 17", "Alumno 18", "Alumno 19", "Alumno 20",
"Alumno 22", "Alumno 23", "Alumno 24", "Alumno 21", "Alumno 25", "Alumno 26", "Alumno 27", "Alumno 28", "Alumno 29", "Alumno 30"),
c(1.25, 1.28, 1.27, 1.21, 1.22, 1.29, 1.30, 1.24, 1.27, 1.29,
1.23, 1.26, 1.30, 1.21, 1.28, 1.30, 1.22, 1.25, 1.20, 1.28,
1.21, 1.29, 1.26, 1.22, 1.28, 1.27, 1.26, 1.23, 1.22, 1.21))
names(dfHeight) <- c("Alumno", "Estatura")
# cargar dfWeightHeight del 1B de los 15 primeros
dfHeightFirst <- dfHeight[1:15,]
# cargar dfWeightHeight del 1B de los 15 ultimos
dfHeightSecond <- dfHeight[16:30,]
t.test(
x           = dfHeightFirst$Estatura,
y           = dfHeightSecond$Estatura,
alternative = "two.sided",
mu          = 0,
var.equal   = FALSE,
paired      = FALSE,
conf.level  = 0.95
)
boxplot(dfHeightFirst$Estatura, main="Altura en una muestra de 30 niños")
boxplot(dfHeightFirst$Estatura, dfHeightSecond$Estatura, main="Altura en una muestra de 30 niños")
boxplot(dfHeightFirst$Estatura, dfHeightSecond$Estatura, main="Altura en dos sub-muestras de 15 niños")
boxplot(dfHeightFirst$Estatura, dfHeightSecond$Estatura,
main="Altura en dos sub-muestras de 15 niños",
names = c("15 primeros", "15 ultimos")
)
boxplot(dfHeightFirst$Estatura, dfHeightSecond$Estatura,
main="Altura en dos sub-muestras de 15 niños",
names = c("15 primeros", "15 últimos")
)
boxplot(dfHeightFirst$Estatura, dfHeightSecond$Estatura,
main="Altura en dos sub-muestras de 15 niños",
names = c("15 primeros", "15 últimos")
)
