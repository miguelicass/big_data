4 + 3
# Programa 1
system.time({
n <- 10000
x <- rep(0, n) for (i in 1:n) {
x[i] <- 1
} })
# Programa 1
system.time({
n <- 10000
x <- rep(0, n) for (i in 1:n) {
x[i] <- 1
} })
system.time({
n <- 10000
x <- rep(0, n) for (i in 1:n) {
x[i] <- 1
} })
system.time({
n <- 10000
x <- rep(0, n) for (i in 1:n) {
x[i] <- 1
} })
# Programa 1
system.time({
n <- 10000
x <- rep(0, n)
for (i in 1:n) {
x[i] <- 1
}
})
#2
#2A
getwd()
# 4
matriz <- structure(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
16, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 3,
2, 1, 1, 1, 1, 1, 1, 2, 1, 4, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
2, 3, 3, 1, 2, 1, 1, 1, 1, 1, 3, 4, 1, 1, 1, 2, 3, 4, 3, 1, 2,
1, 1, 4, 1, 1, 4, 4, 1, 1), .Dim = c(16L, 8L))
View(matriz)
# 4.1
frequencyVector <- function(columnMatrix, maxBurning) {
f <- tabulate(columnMatrix, maxBurning)
sumF <- sum(f)
f <- t(cbind(f))
for(i in 1:length(f)){
if (i==1){
aux <- cbind(f[i],(sumF-f[i]))
}else{
aux <- cbind(aux,f[i],(sumF-f[i]))
}
}
f <- as.vector(aux)
}
maxBurning <- max(matriz[,2:8])
freq <- frequencyVector(matriz[,8], maxBurning)
print(freq)
# 4.2
burningMatrix <- apply(matriz[,2:8],2,frequencyVector, maxBurning)
# 4.3
semanas <- c("S1", "S2", "S3", "S4", "S5", "S6", "S7")
barplot(burningMatrix,
main="Ardor de hidrogel en 16 sujetos durante 7 semanas",
axes = FALSE,
xlab="Semana",
ylab ="Ardor total",
col=c("black","white"),
names.arg = semanas,
axisnames = TRUE,
width = 1,
space = 0.1,
las=1
)
axis(side = 2, at = seq(8,16*4, by =16), labels = c(1:4), las=1, tick = FALSE)
getwd()
setwd("/Users/macasib/Desktop/UCM/Programación\ R/TareaEvaluacion"
setwd("/Users/macasib/Desktop/UCM/Programación\ R/TareaEvaluacion")
setwd("/Users/macasib/Desktop/UCM/Programación\ R/TareaEvaluacion")
# 4.3
semanas <- c("S1", "S2", "S3", "S4", "S5", "S6", "S7")
barplot(burningMatrix,
main="Ardor de hidrogel en 16 sujetos durante 7 semanas",
axes = FALSE,
xlab="Semana",
ylab ="Ardor total",
col=c("black","white"),
names.arg = semanas,
axisnames = TRUE,
width = 1,
space = 0.1,
las=1
)
axis(side = 2, at = seq(8,16*4, by =16), labels = c(1:4), las=1, tick = FALSE)
# 4.4
calculateSpaceH <- function(width, space) {
for(i in 1:7){
if (i==1){
aux <- (width/2 + space)
}else{
aux <- cbind(aux,aux[i-1] + width + space)
}
}
posSem <- as.vector(aux)
}
posSem <- calculateSpaceH(1,0.1)
barplot(burningMatrix,
main="Ardor en 16 sujetos usando hidrogel\n\n",
axes = FALSE,
xlab="Semana",
ylab ="Ardor total",
col=c("red","white"),
col.axis="blue",
# names.arg = c("1", "2", "3", "4", "5", "6", "7"),
axisnames = TRUE,
width = 1,
space = 0.1,
las=1
)
axis(side = 3, at = posSem, labels = semanas, tick = FALSE, col.axis = "blue")
axis(side = 2, at = seq(8,16*4, by =16), labels = c(1:4), las=1, tick = FALSE, col.axis = "blue")
barplot(burningMatrix,
main="Ardor en 16 sujetos usando hidrogel\n\n",
axes = FALSE,
xlab="Semana",
ylab ="Ardor total",
col=c("red","white"),
col.axis="blue",
# names.arg = c("1", "2", "3", "4", "5", "6", "7"),
axisnames = TRUE,
width = 1,
space = 0.1,
las=1
) +
axis(side = 3, at = posSem, labels = semanas, tick = FALSE, col.axis = "blue") +
axis(side = 2, at = seq(8,16*4, by =16), labels = c(1:4), las=1, tick = FALSE, col.axis = "blue")
barplot(burningMatrix,
main="Ardor en 16 sujetos usando hidrogel\n\n",
axes = FALSE,
xlab="Semana",
ylab ="Ardor total",
col=c("red","white"),
col.axis="blue",
# names.arg = c("1", "2", "3", "4", "5", "6", "7"),
axisnames = TRUE,
width = 1,
space = 0.1,
las=1
)
axis(side = 3, at = posSem, labels = semanas, tick = FALSE, col.axis = "blue")
axis(side = 2, at = seq(8,16*4, by =16), labels = c(1:4), las=1, tick = FALSE, col.axis = "blue")
barplot(burningMatrix,
main="Ardor en 16 sujetos usando hidrogel\n\n",
axes = FALSE,
xlab="Semana",
ylab ="Ardor total",
col=c("red","white"),
col.axis="blue",
# names.arg = c("1", "2", "3", "4", "5", "6", "7"),
axisnames = TRUE,
width = 1,
space = 0.1,
#las=1
)
axis(side = 3, at = posSem, labels = semanas, tick = FALSE, col.axis = "blue")
axis(side = 2, at = seq(8,16*4, by =16), labels = c(1:4), las=1, tick = FALSE, col.axis = "blue")
barplot(burningMatrix,
main="Ardor en 16 sujetos usando hidrogel\n\n",
axes = FALSE,
xlab="Semana",
ylab ="Ardor total",
col=c("red","white"),
col.axis="blue",
# names.arg = c("1", "2", "3", "4", "5", "6", "7"),
axisnames = TRUE,
width = 1,
space = 0.1,
las=1
)
axis(side = 3, at = posSem, labels = semanas, tick = FALSE, col.axis = "blue")
axis(side = 2, at = seq(8,16*4, by =16), labels = c(1:4), las=1, tick = FALSE, col.axis = "blue")
# 2A
# read.table(file.choose(z),header=T)
getwd()
setwd("/Users/macasib/Desktop/UCM/Programación\ R/TareaEvaluacion")
# read.csv(file, header=FALSE, sep=",",quote="\"'",dec=".", row.names, col.names, skip)
prov <- read.csv(file='./Datos/Cod_19/datos_provincias.csv', header=TRUE, sep=",")
codProv <- read.table(file='./Datos/Cod_19/CodProv.txt', header=TRUE, sep=",")
codCCAA <- read.csv(file='./Datos/Cod_19/CodCCAA.csv', header=TRUE, sep="\t")
# Limpiampos el codigo del pais  ES -
# Hasta 3 caracteres
# Prov
codProv$Código <- substr(codProv$Código, 4, 5)
# CCAA
codCCAA$Código <- substr(codCCAA$Código, 4, 5)
# merge con CCAA
provCCAA <- merge(prov, codProv, by.x = "provincia_iso", by.y = "Código",  all.x=TRUE)
# 2
# Libraries
library(dplyr) # 2B para usar la funcion filter
library(ggplot2)# 2C, 2D para potear las funciones
library(reshape2)# 2D para moder hacer melt()
# 2A
# read.table(file.choose(z),header=T)
getwd()
setwd("/Users/macasib/Desktop/UCM/Programación\ R/TareaEvaluacion")
# read.csv(file, header=FALSE, sep=",",quote="\"'",dec=".", row.names, col.names, skip)
prov <- read.csv(file='./Datos/Cod_19/datos_provincias.csv', header=TRUE, sep=",")
codProv <- read.table(file='./Datos/Cod_19/CodProv.txt', header=TRUE, sep=",")
codCCAA <- read.csv(file='./Datos/Cod_19/CodCCAA.csv', header=TRUE, sep="\t")
# Limpiampos el codigo del pais  ES -
# Hasta 3 caracteres
# Prov
codProv$Código <- substr(codProv$Código, 4, 5)
# CCAA
codCCAA$Código <- substr(codCCAA$Código, 4, 5)
# merge con CCAA
provCCAA <- merge(prov, codProv, by.x = "provincia_iso", by.y = "Código",  all.x=TRUE)
# 2B
# calculode la CCAA
numCCAA <- 46081840 %% 17
myCCAA <- filter(codCCAA, X == numCCAA) # Extremadura
# Filter just EX
dataEX <- filter(provCCAA, Comunidad.autónoma == myCCAA$Código)
dataEX <- dataEX[order( dataEX$provincia_iso, dataEX$fecha),]
# group by: fecha
dataEX$fecha <- as.Date(dataEX$fecha)
dataAllEX <- aggregate(dataEX[,3:7], by=dataEX["fecha"], sum)
# 2C
# CCAA Extremadura
ggplot(data = dataAllEX,
aes(x=fecha,
y=num_casos))+
geom_line() +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Provincias') +
theme(axis.text.x = element_blank())
# 2C
# CCAA Extremadura
ggplot(data = dataAllEX,
aes(x=fecha,
y=num_casos))+
geom_line() +
ggtitle ("Numero de casos COVID en Extremadura") +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Provincias') +
theme(axis.text.x = element_blank())
# Provincias
ggplot(data = dataEX,
aes(x=fecha,
y=num_casos,
group = Nombre.de.la.subdivisión.en.la.ISO1,
colour = Nombre.de.la.subdivisión.en.la.ISO1))+
geom_line() +
ggtitle ("Numero de casos COVID en Extremadura (Provincias)") +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Provincias') +
theme(axis.text.x = element_blank())
# Provincias
ggplot(data = dataEX,
aes(x=fecha,
y=num_casos,
group = Nombre.de.la.subdivisión.en.la.ISO1,
colour = Nombre.de.la.subdivisión.en.la.ISO1))+
geom_line() +
ggtitle ("Numero de casos COVID en las provincias de Extremadura") +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Provincias') +
theme(axis.text.x = element_blank())
# 2C
# CCAA Extremadura
ggplot(data = dataAllEX,
aes(x=fecha,
y=num_casos))+
geom_line() +
ggtitle ("Numero de casos COVID en Extremadura") +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Provincias') +
theme(axis.text.x = element_blank())
# Provincias
ggplot(data = dataEX,
aes(x=fecha,
y=num_casos,
group = Nombre.de.la.subdivisión.en.la.ISO1,
colour = Nombre.de.la.subdivisión.en.la.ISO1))+
geom_line() +
ggtitle ("Numero de casos COVID en las provincias de Extremadura") +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Provincias') +
theme(axis.text.x = element_blank())
# 2D
# CCAA Extremadura
dataAllEX <- melt(dataAllEX, id.vars="fecha")
ggplot(data = dataAllEX,
aes(x=fecha, y = value,
group = variable,
colour = variable)) +
ggtitle ("Numero de casos COVID Extremadura") +
geom_line() +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
theme(axis.text.x = element_blank())
# Badajoz
dataBA <- filter(provCCAA, provincia_iso == "BA")
dataBA <- melt(dataBA[,2:7], id.vars="fecha")
ggplot(dataBA,
aes(x = fecha, y = value,
group = variable,
colour = variable)) +
geom_line() +
ggtitle ("Numero de casos COVID Badajoz") +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
theme(axis.text.x = element_blank())
# Caceres
dataCC <- filter(provCCAA, provincia_iso == "CC")
dataCC <- melt(dataCC[,2:7], id.vars="fecha")
ggplot(dataCC,
aes(x= fecha, y = value,
group = variable,
colour = variable)) +
geom_line()+
ggtitle ("Numero de casos COVID Cáceres") +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
theme(axis.text.x = element_blank())
ggplot(data = dataAllEX,
aes(x=fecha, y = value,
group = variable,
colour = variable)) +
ggtitle ("Numero de casos COVID Extremadura") +
geom_line() +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
theme(axis.text.x = element_blank())
ggplot(data = dataAllEX,
aes(x=fecha, y = value,
group = variable,
colour = variable)) +
ggtitle ("Numero de casos COVID Extremadura") +
geom_line() +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
scale_fill_discrete(name = "Dose", labels = c("A", "B", "C"))+
theme(axis.text.x = element_blank())
ggplot(data = dataAllEX,
aes(x=fecha, y = value,
group = variable,
colour = variable)) +
ggtitle ("Numero de casos COVID Extremadura") +
geom_line() +
xlab("Fecha") +
ylab("Numero de casos") +
#labs(color='Casos') +
scale_fill_discrete(name = "Dose", labels = c("A", "B", "C"))+
theme(axis.text.x = element_blank())
ggplot(data = dataAllEX,
aes(x=fecha, y = value,
group = variable,
colour = variable)) +
ggtitle ("Numero de casos COVID Extremadura") +
geom_line() +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
theme(axis.text.x = element_blank())
ggplot(data = dataAllEX,
aes(x=fecha, y = value,
group = variable,
colour = variable)) +
ggtitle ("Numero de casos COVID Extremadura") +
geom_line() +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
scale_color_manual(labels = c("Numero de casos", "Numero de casos pruebas PCR", "Numero de casos test AC", "Numero de otras pruebas", "Numero de pruebas desconocidas"), values = c("blue", "red", "green", "yellow", "pink")) +
theme(axis.text.x = element_blank())
ggplot(data = dataAllEX,
aes(x=fecha, y = value,
group = variable,
colour = variable)) +
ggtitle ("Numero de casos COVID Extremadura") +
geom_line() +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
scale_color_manual(labels = c("Numero de casos", "Numero de casos pruebas PCR", "Numero de casos test AC", "Numero de otras pruebas", "Numero de pruebas desconocidas")) +
theme(axis.text.x = element_blank())
ggplot(data = dataAllEX,
aes(x=fecha, y = value,
group = variable,
colour = variable)) +
ggtitle ("Numero de casos COVID Extremadura") +
geom_line() +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
scale_color_manual(labels = c("Numero de casos", "Numero de casos pruebas PCR", "Numero de casos test AC", "Numero de otras pruebas", "Numero de pruebas desconocidas"), values = c("blue", "red", "green", "pink", "yellow")) +
theme(axis.text.x = element_blank())
ggplot(data = dataAllEX,
aes(x=fecha, y = value,
group = variable,
colour = variable)) +
ggtitle ("Numero de casos COVID Extremadura") +
geom_line() +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
scale_color_manual(labels = c("Numero de casos", "Numero de casos pruebas PCR", "Numero de casos test AC", "Numero de otras pruebas", "Numero de pruebas desconocidas"), values = c("blue", "red", "green", "black", "yellow")) +
theme(axis.text.x = element_blank())
ggplot(data = dataAllEX,
aes(x=fecha, y = value,
group = variable,
colour = variable)) +
ggtitle ("Numero de casos COVID Extremadura") +
geom_line() +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
scale_color_manual(labels = c("Numero de casos", "Numero de casos pruebas PCR", "Numero de casos test AC", "Numero de otras pruebas", "Numero de pruebas desconocidas"), values = c("blue", "red", "green", "brown", "yellow")) +
theme(axis.text.x = element_blank())
ggplot(data = dataAllEX,
aes(x=fecha, y = value,
group = variable,
colour = variable)) +
ggtitle ("Numero de casos COVID Extremadura") +
geom_line() +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
scale_color_manual(labels = c("Numero de casos", "Numero de casos pruebas PCR", "Numero de casos test AC", "Numero de otras pruebas", "Numero de pruebas desconocidas"),
values = c("blue", "red", "green", "brown", "yellow")) +
theme(axis.text.x = element_blank())
ggplot(dataBA,
aes(x = fecha, y = value,
group = variable,
colour = variable)) +
geom_line() +
ggtitle ("Numero de casos COVID Badajoz") +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
scale_color_manual(labels = c("Numero de casos", "Numero de casos pruebas PCR", "Numero de casos test AC", "Numero de otras pruebas", "Numero de pruebas desconocidas"),
values = c("blue", "red", "green", "brown", "yellow")) +
theme(axis.text.x = element_blank())
# Badajoz
dataBA <- filter(provCCAA, provincia_iso == "BA")
dataBA <- melt(dataBA[,2:7], id.vars="fecha")
ggplot(dataBA,
aes(x = fecha, y = value,
group = variable,
colour = variable)) +
geom_line() +
ggtitle ("Numero de casos COVID Badajoz") +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
scale_color_manual(labels = c("Numero de casos", "Numero de casos pruebas PCR", "Numero de casos test AC", "Numero de otras pruebas", "Numero de pruebas desconocidas"),
values = c("blue", "red", "green", "brown", "yellow")) +
theme(axis.text.x = element_blank())
# Caceres
dataCC <- filter(provCCAA, provincia_iso == "CC")
dataCC <- melt(dataCC[,2:7], id.vars="fecha")
ggplot(dataCC,
aes(x= fecha, y = value,
group = variable,
colour = variable)) +
geom_line()+
ggtitle ("Numero de casos COVID Cáceres") +
xlab("Fecha") +
ylab("Numero de casos") +
labs(color='Casos') +
scale_color_manual(labels = c("Numero de casos", "Numero de casos pruebas PCR", "Numero de casos test AC", "Numero de otras pruebas", "Numero de pruebas desconocidas"),
values = c("blue", "red", "green", "brown", "yellow")) +
theme(axis.text.x = element_blank())
# 3A
getwd()
